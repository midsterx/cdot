Terminals unused in grammar

   TYPE_NAME
   ARRTYPE


Rules useless in parser due to conflicts

   80 $@7: %empty


State 10 conflicts: 8 shift/reduce
State 23 conflicts: 1 reduce/reduce
State 68 conflicts: 2 reduce/reduce
State 70 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 165 conflicts: 1 shift/reduce
State 170 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start_state $end

    1 start_state: HEADER start_state
    2            | translation_unit

    3 translation_unit: external_declaration
    4                 | translation_unit external_declaration

    5 external_declaration: function_definition
    6                     | declaration
    7                     | record_declaration

    8 function_definition: return_type_specifier declarator '(' params ')' compound_statement

    9 params: param_decl
   10       | params ',' param_decl

   11 param_decl: scoped_type_specifier declarator
   12           | scoped_type_specifier

   13 declarator: IDENTIFIER

   14 declaration: scoped_type_specifier init_declarator_list ';'
   15            | STRUCT IDENTIFIER declarator ';'
   16            | scoped_type_specifier ';'

   17 init_declarator_list: init_declarator
   18                     | init_declarator_list ',' init_declarator

   19 init_declarator: declarator
   20                | declarator '=' primary_expression
   21                | declarator '=' simple_expression

   22 return_type_specifier: STATIC type_specifier
   23                      | type_specifier

   24 scoped_type_specifier: storage_class type_specifier
   25                      | type_specifier

   26 storage_class: STATIC
   27              | EXTERN
   28              | REGISTER
   29              | AUTO

   30 type_specifier: VOID
   31               | CHAR
   32               | INT
   33               | LONG
   34               | FLOAT
   35               | DOUBLE
   36               | UNSIGNED INT
   37               | UNSIGNED SHORT INT
   38               | UNSIGNED LONG INT
   39               | UNSIGNED LONG LONG INT
   40               | SIGNED INT
   41               | SIGNED SHORT INT
   42               | SIGNED LONG INT
   43               | SIGNED LONG LONG INT

   44 $@1: %empty

   45 $@2: %empty

   46 record_declaration: STRUCT IDENTIFIER '{' $@1 simple_declaration '}' $@2 ';'

   47 simple_declaration: type_specifier IDENTIFIER ';'
   48                   | simple_declaration type_specifier IDENTIFIER ';'

   49 primary_expression: declarator
   50                   | CONSTANT

   51 statement: expression_statement
   52          | compound_statement
   53          | conditional_statement
   54          | iteration_statement
   55          | break_statement
   56          | continue_statement
   57          | return_statement
   58          | statement ';' statement

   59 $@3: %empty

   60 expression_statement: expression $@3 ';'
   61                     | ';'

   62 expression: declarator '=' expression
   63           | declarator SHORTHANDADD expression
   64           | declarator SHORTHANDSUB expression
   65           | declarator SHORTHANDMULT expression
   66           | declarator SHORTHANDDIV expression
   67           | declarator INCREMENT
   68           | declarator DECREMENT
   69           | simple_expression

   70 $@4: %empty

   71 compound_statement: '{' $@4 '}'

   72 $@5: %empty

   73 compound_statement: '{' $@5 block_scope_list '}'

   74 block_scope_list: block_item
   75                 | block_item block_scope_list

   76 block_item: declaration
   77           | statement

   78 $@6: %empty

   79 conditional_statement: IF '(' condition ')' $@6 compound_statement

   80 $@7: %empty

   81 $@8: %empty

   82 conditional_statement: IF '(' condition ')' $@7 compound_statement $@8 ELSE compound_statement

   83 condition: expression logop expression
   84          | expression

   85 iteration_statement: DO compound_statement WHILE '(' condition ')' ';'

   86 break_statement: BREAK ';'

   87 continue_statement: CONTINUE ';'

   88 return_statement: RETURN ';'
   89                 | RETURN expression ';'

   90 simple_expression: simple_expression OR and_expression
   91                  | and_expression

   92 and_expression: and_expression AND unary_rel_expression
   93               | unary_rel_expression

   94 unary_rel_expression: NOT factor
   95                     | rel_expression

   96 rel_expression: sum_expression

   97 $@9: %empty

   98 rel_expression: sum_expression RELOP $@9 sum_expression

   99 $@10: %empty

  100 sum_expression: sum_expression sumop $@10 term
  101               | term

  102 sumop: '+'
  103      | '-'

  104 logop: OR
  105      | AND

  106 $@11: %empty

  107 term: term mulop $@11 factor
  108     | factor

  109 mulop: '*'
  110      | '/'

  111 factor: primary_expression
  112       | '(' simple_expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 79 82 85 112
')' (41) 8 79 82 85 112
'*' (42) 109
'+' (43) 102
',' (44) 10 18
'-' (45) 103
'/' (47) 110
';' (59) 14 15 16 46 47 48 58 60 61 85 86 87 88 89
'=' (61) 20 21 62
'{' (123) 46 71 73
'}' (125) 46 71 73
error (256)
IDENTIFIER (258) 13 15 46 47 48
CONSTANT (259) 50
TYPE_NAME (260)
CHAR (261) 31
INT (262) 32 36 37 38 39 40 41 42 43
LONG (263) 33 38 39 42 43
FLOAT (264) 34
DOUBLE (265) 35
VOID (266) 30
SHORT (267) 37 41
UNSIGNED (268) 36 37 38 39
SIGNED (269) 40 41 42 43
IF (270) 79 82
ELSE (271) 82
WHILE (272) 85
DO (273) 85
BREAK (274) 86
CONTINUE (275) 87
RETURN (276) 88 89
RELOP (277) 98
AND (278) 92 105
OR (279) 90 104
NOT (280) 94
SHORTHANDADD (281) 63
SHORTHANDSUB (282) 64
SHORTHANDMULT (283) 65
SHORTHANDDIV (284) 66
INCREMENT (285) 67
DECREMENT (286) 68
STRUCT (287) 15 46
STATIC (288) 22 26
EXTERN (289) 27
REGISTER (290) 28
AUTO (291) 29
ARRTYPE (292)
HEADER (293) 1


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
start_state (51)
    on left: 1 2, on right: 0 1
translation_unit (52)
    on left: 3 4, on right: 2 4
external_declaration (53)
    on left: 5 6 7, on right: 3 4
function_definition (54)
    on left: 8, on right: 5
params (55)
    on left: 9 10, on right: 8 10
param_decl (56)
    on left: 11 12, on right: 9 10
declarator (57)
    on left: 13, on right: 8 11 15 19 20 21 49 62 63 64 65 66 67 68
declaration (58)
    on left: 14 15 16, on right: 6 76
init_declarator_list (59)
    on left: 17 18, on right: 14 18
init_declarator (60)
    on left: 19 20 21, on right: 17 18
return_type_specifier (61)
    on left: 22 23, on right: 8
scoped_type_specifier (62)
    on left: 24 25, on right: 11 12 14 16
storage_class (63)
    on left: 26 27 28 29, on right: 24
type_specifier (64)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43, on right: 22
    23 24 25 47 48
record_declaration (65)
    on left: 46, on right: 7
$@1 (66)
    on left: 44, on right: 46
$@2 (67)
    on left: 45, on right: 46
simple_declaration (68)
    on left: 47 48, on right: 46 48
primary_expression (69)
    on left: 49 50, on right: 20 111
statement (70)
    on left: 51 52 53 54 55 56 57 58, on right: 58 77
expression_statement (71)
    on left: 60 61, on right: 51
$@3 (72)
    on left: 59, on right: 60
expression (73)
    on left: 62 63 64 65 66 67 68 69, on right: 60 62 63 64 65 66 83
    84 89
compound_statement (74)
    on left: 71 73, on right: 8 52 79 82 85
$@4 (75)
    on left: 70, on right: 71
$@5 (76)
    on left: 72, on right: 73
block_scope_list (77)
    on left: 74 75, on right: 73 75
block_item (78)
    on left: 76 77, on right: 74 75
conditional_statement (79)
    on left: 79 82, on right: 53
$@6 (80)
    on left: 78, on right: 79
$@7 (81)
    on left: 80, on right: 82
$@8 (82)
    on left: 81, on right: 82
condition (83)
    on left: 83 84, on right: 79 82 85
iteration_statement (84)
    on left: 85, on right: 54
break_statement (85)
    on left: 86, on right: 55
continue_statement (86)
    on left: 87, on right: 56
return_statement (87)
    on left: 88 89, on right: 57
simple_expression (88)
    on left: 90 91, on right: 21 69 90 112
and_expression (89)
    on left: 92 93, on right: 90 91 92
unary_rel_expression (90)
    on left: 94 95, on right: 92 93
rel_expression (91)
    on left: 96 98, on right: 95
$@9 (92)
    on left: 97, on right: 98
sum_expression (93)
    on left: 100 101, on right: 96 98 100
$@10 (94)
    on left: 99, on right: 100
sumop (95)
    on left: 102 103, on right: 100
logop (96)
    on left: 104 105, on right: 83
term (97)
    on left: 107 108, on right: 100 101 107
$@11 (98)
    on left: 106, on right: 107
mulop (99)
    on left: 109 110, on right: 107
factor (100)
    on left: 111 112, on right: 94 107 108


State 0

    0 $accept: . start_state $end

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    LONG      shift, and go to state 3
    FLOAT     shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    SIGNED    shift, and go to state 8
    STRUCT    shift, and go to state 9
    STATIC    shift, and go to state 10
    EXTERN    shift, and go to state 11
    REGISTER  shift, and go to state 12
    AUTO      shift, and go to state 13
    HEADER    shift, and go to state 14

    start_state            go to state 15
    translation_unit       go to state 16
    external_declaration   go to state 17
    function_definition    go to state 18
    declaration            go to state 19
    return_type_specifier  go to state 20
    scoped_type_specifier  go to state 21
    storage_class          go to state 22
    type_specifier         go to state 23
    record_declaration     go to state 24


State 1

   31 type_specifier: CHAR .

    $default  reduce using rule 31 (type_specifier)


State 2

   32 type_specifier: INT .

    $default  reduce using rule 32 (type_specifier)


State 3

   33 type_specifier: LONG .

    $default  reduce using rule 33 (type_specifier)


State 4

   34 type_specifier: FLOAT .

    $default  reduce using rule 34 (type_specifier)


State 5

   35 type_specifier: DOUBLE .

    $default  reduce using rule 35 (type_specifier)


State 6

   30 type_specifier: VOID .

    $default  reduce using rule 30 (type_specifier)


State 7

   36 type_specifier: UNSIGNED . INT
   37               | UNSIGNED . SHORT INT
   38               | UNSIGNED . LONG INT
   39               | UNSIGNED . LONG LONG INT

    INT    shift, and go to state 25
    LONG   shift, and go to state 26
    SHORT  shift, and go to state 27


State 8

   40 type_specifier: SIGNED . INT
   41               | SIGNED . SHORT INT
   42               | SIGNED . LONG INT
   43               | SIGNED . LONG LONG INT

    INT    shift, and go to state 28
    LONG   shift, and go to state 29
    SHORT  shift, and go to state 30


State 9

   15 declaration: STRUCT . IDENTIFIER declarator ';'
   46 record_declaration: STRUCT . IDENTIFIER '{' $@1 simple_declaration '}' $@2 ';'

    IDENTIFIER  shift, and go to state 31


State 10

   22 return_type_specifier: STATIC . type_specifier
   26 storage_class: STATIC .

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    LONG      shift, and go to state 3
    FLOAT     shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    SIGNED    shift, and go to state 8

    CHAR      [reduce using rule 26 (storage_class)]
    INT       [reduce using rule 26 (storage_class)]
    LONG      [reduce using rule 26 (storage_class)]
    FLOAT     [reduce using rule 26 (storage_class)]
    DOUBLE    [reduce using rule 26 (storage_class)]
    VOID      [reduce using rule 26 (storage_class)]
    UNSIGNED  [reduce using rule 26 (storage_class)]
    SIGNED    [reduce using rule 26 (storage_class)]

    type_specifier  go to state 32


State 11

   27 storage_class: EXTERN .

    $default  reduce using rule 27 (storage_class)


State 12

   28 storage_class: REGISTER .

    $default  reduce using rule 28 (storage_class)


State 13

   29 storage_class: AUTO .

    $default  reduce using rule 29 (storage_class)


State 14

    1 start_state: HEADER . start_state

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    LONG      shift, and go to state 3
    FLOAT     shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    SIGNED    shift, and go to state 8
    STRUCT    shift, and go to state 9
    STATIC    shift, and go to state 10
    EXTERN    shift, and go to state 11
    REGISTER  shift, and go to state 12
    AUTO      shift, and go to state 13
    HEADER    shift, and go to state 14

    start_state            go to state 33
    translation_unit       go to state 16
    external_declaration   go to state 17
    function_definition    go to state 18
    declaration            go to state 19
    return_type_specifier  go to state 20
    scoped_type_specifier  go to state 21
    storage_class          go to state 22
    type_specifier         go to state 23
    record_declaration     go to state 24


State 15

    0 $accept: start_state . $end

    $end  shift, and go to state 34


State 16

    2 start_state: translation_unit .
    4 translation_unit: translation_unit . external_declaration

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    LONG      shift, and go to state 3
    FLOAT     shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    SIGNED    shift, and go to state 8
    STRUCT    shift, and go to state 9
    STATIC    shift, and go to state 10
    EXTERN    shift, and go to state 11
    REGISTER  shift, and go to state 12
    AUTO      shift, and go to state 13

    $default  reduce using rule 2 (start_state)

    external_declaration   go to state 35
    function_definition    go to state 18
    declaration            go to state 19
    return_type_specifier  go to state 20
    scoped_type_specifier  go to state 21
    storage_class          go to state 22
    type_specifier         go to state 23
    record_declaration     go to state 24


State 17

    3 translation_unit: external_declaration .

    $default  reduce using rule 3 (translation_unit)


State 18

    5 external_declaration: function_definition .

    $default  reduce using rule 5 (external_declaration)


State 19

    6 external_declaration: declaration .

    $default  reduce using rule 6 (external_declaration)


State 20

    8 function_definition: return_type_specifier . declarator '(' params ')' compound_statement

    IDENTIFIER  shift, and go to state 36

    declarator  go to state 37


State 21

   14 declaration: scoped_type_specifier . init_declarator_list ';'
   16            | scoped_type_specifier . ';'

    IDENTIFIER  shift, and go to state 36
    ';'         shift, and go to state 38

    declarator            go to state 39
    init_declarator_list  go to state 40
    init_declarator       go to state 41


State 22

   24 scoped_type_specifier: storage_class . type_specifier

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    LONG      shift, and go to state 3
    FLOAT     shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    SIGNED    shift, and go to state 8

    type_specifier  go to state 42


State 23

   23 return_type_specifier: type_specifier .
   25 scoped_type_specifier: type_specifier .

    IDENTIFIER  reduce using rule 23 (return_type_specifier)
    IDENTIFIER  [reduce using rule 25 (scoped_type_specifier)]
    ';'         reduce using rule 25 (scoped_type_specifier)
    $default    reduce using rule 23 (return_type_specifier)


State 24

    7 external_declaration: record_declaration .

    $default  reduce using rule 7 (external_declaration)


State 25

   36 type_specifier: UNSIGNED INT .

    $default  reduce using rule 36 (type_specifier)


State 26

   38 type_specifier: UNSIGNED LONG . INT
   39               | UNSIGNED LONG . LONG INT

    INT   shift, and go to state 43
    LONG  shift, and go to state 44


State 27

   37 type_specifier: UNSIGNED SHORT . INT

    INT  shift, and go to state 45


State 28

   40 type_specifier: SIGNED INT .

    $default  reduce using rule 40 (type_specifier)


State 29

   42 type_specifier: SIGNED LONG . INT
   43               | SIGNED LONG . LONG INT

    INT   shift, and go to state 46
    LONG  shift, and go to state 47


State 30

   41 type_specifier: SIGNED SHORT . INT

    INT  shift, and go to state 48


State 31

   15 declaration: STRUCT IDENTIFIER . declarator ';'
   46 record_declaration: STRUCT IDENTIFIER . '{' $@1 simple_declaration '}' $@2 ';'

    IDENTIFIER  shift, and go to state 36
    '{'         shift, and go to state 49

    declarator  go to state 50


State 32

   22 return_type_specifier: STATIC type_specifier .

    $default  reduce using rule 22 (return_type_specifier)


State 33

    1 start_state: HEADER start_state .

    $default  reduce using rule 1 (start_state)


State 34

    0 $accept: start_state $end .

    $default  accept


State 35

    4 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 4 (translation_unit)


State 36

   13 declarator: IDENTIFIER .

    $default  reduce using rule 13 (declarator)


State 37

    8 function_definition: return_type_specifier declarator . '(' params ')' compound_statement

    '('  shift, and go to state 51


State 38

   16 declaration: scoped_type_specifier ';' .

    $default  reduce using rule 16 (declaration)


State 39

   19 init_declarator: declarator .
   20                | declarator . '=' primary_expression
   21                | declarator . '=' simple_expression

    '='  shift, and go to state 52

    $default  reduce using rule 19 (init_declarator)


State 40

   14 declaration: scoped_type_specifier init_declarator_list . ';'
   18 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 53
    ';'  shift, and go to state 54


State 41

   17 init_declarator_list: init_declarator .

    $default  reduce using rule 17 (init_declarator_list)


State 42

   24 scoped_type_specifier: storage_class type_specifier .

    $default  reduce using rule 24 (scoped_type_specifier)


State 43

   38 type_specifier: UNSIGNED LONG INT .

    $default  reduce using rule 38 (type_specifier)


State 44

   39 type_specifier: UNSIGNED LONG LONG . INT

    INT  shift, and go to state 55


State 45

   37 type_specifier: UNSIGNED SHORT INT .

    $default  reduce using rule 37 (type_specifier)


State 46

   42 type_specifier: SIGNED LONG INT .

    $default  reduce using rule 42 (type_specifier)


State 47

   43 type_specifier: SIGNED LONG LONG . INT

    INT  shift, and go to state 56


State 48

   41 type_specifier: SIGNED SHORT INT .

    $default  reduce using rule 41 (type_specifier)


State 49

   46 record_declaration: STRUCT IDENTIFIER '{' . $@1 simple_declaration '}' $@2 ';'

    $default  reduce using rule 44 ($@1)

    $@1  go to state 57


State 50

   15 declaration: STRUCT IDENTIFIER declarator . ';'

    ';'  shift, and go to state 58


State 51

    8 function_definition: return_type_specifier declarator '(' . params ')' compound_statement

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    LONG      shift, and go to state 3
    FLOAT     shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    SIGNED    shift, and go to state 8
    STATIC    shift, and go to state 59
    EXTERN    shift, and go to state 11
    REGISTER  shift, and go to state 12
    AUTO      shift, and go to state 13

    params                 go to state 60
    param_decl             go to state 61
    scoped_type_specifier  go to state 62
    storage_class          go to state 22
    type_specifier         go to state 63


State 52

   20 init_declarator: declarator '=' . primary_expression
   21                | declarator '=' . simple_expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 67
    primary_expression    go to state 68
    simple_expression     go to state 69
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 53

   18 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 36

    declarator       go to state 39
    init_declarator  go to state 76


State 54

   14 declaration: scoped_type_specifier init_declarator_list ';' .

    $default  reduce using rule 14 (declaration)


State 55

   39 type_specifier: UNSIGNED LONG LONG INT .

    $default  reduce using rule 39 (type_specifier)


State 56

   43 type_specifier: SIGNED LONG LONG INT .

    $default  reduce using rule 43 (type_specifier)


State 57

   46 record_declaration: STRUCT IDENTIFIER '{' $@1 . simple_declaration '}' $@2 ';'

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    LONG      shift, and go to state 3
    FLOAT     shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    SIGNED    shift, and go to state 8

    type_specifier      go to state 77
    simple_declaration  go to state 78


State 58

   15 declaration: STRUCT IDENTIFIER declarator ';' .

    $default  reduce using rule 15 (declaration)


State 59

   26 storage_class: STATIC .

    $default  reduce using rule 26 (storage_class)


State 60

    8 function_definition: return_type_specifier declarator '(' params . ')' compound_statement
   10 params: params . ',' param_decl

    ')'  shift, and go to state 79
    ','  shift, and go to state 80


State 61

    9 params: param_decl .

    $default  reduce using rule 9 (params)


State 62

   11 param_decl: scoped_type_specifier . declarator
   12           | scoped_type_specifier .

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 12 (param_decl)

    declarator  go to state 81


State 63

   25 scoped_type_specifier: type_specifier .

    $default  reduce using rule 25 (scoped_type_specifier)


State 64

   50 primary_expression: CONSTANT .

    $default  reduce using rule 50 (primary_expression)


State 65

   94 unary_rel_expression: NOT . factor

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    '('         shift, and go to state 66

    declarator          go to state 67
    primary_expression  go to state 82
    factor              go to state 83


State 66

  112 factor: '(' . simple_expression ')'

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 67
    primary_expression    go to state 82
    simple_expression     go to state 84
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 67

   49 primary_expression: declarator .

    $default  reduce using rule 49 (primary_expression)


State 68

   20 init_declarator: declarator '=' primary_expression .
  111 factor: primary_expression .

    ','       reduce using rule 20 (init_declarator)
    ','       [reduce using rule 111 (factor)]
    ';'       reduce using rule 20 (init_declarator)
    ';'       [reduce using rule 111 (factor)]
    $default  reduce using rule 111 (factor)


State 69

   21 init_declarator: declarator '=' simple_expression .
   90 simple_expression: simple_expression . OR and_expression

    OR  shift, and go to state 85

    $default  reduce using rule 21 (init_declarator)


State 70

   91 simple_expression: and_expression .
   92 and_expression: and_expression . AND unary_rel_expression

    AND  shift, and go to state 86

    AND       [reduce using rule 91 (simple_expression)]
    $default  reduce using rule 91 (simple_expression)


State 71

   93 and_expression: unary_rel_expression .

    $default  reduce using rule 93 (and_expression)


State 72

   95 unary_rel_expression: rel_expression .

    $default  reduce using rule 95 (unary_rel_expression)


State 73

   96 rel_expression: sum_expression .
   98               | sum_expression . RELOP $@9 sum_expression
  100 sum_expression: sum_expression . sumop $@10 term

    RELOP  shift, and go to state 87
    '+'    shift, and go to state 88
    '-'    shift, and go to state 89

    $default  reduce using rule 96 (rel_expression)

    sumop  go to state 90


State 74

  101 sum_expression: term .
  107 term: term . mulop $@11 factor

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 101 (sum_expression)

    mulop  go to state 93


State 75

  108 term: factor .

    $default  reduce using rule 108 (term)


State 76

   18 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 18 (init_declarator_list)


State 77

   47 simple_declaration: type_specifier . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 94


State 78

   46 record_declaration: STRUCT IDENTIFIER '{' $@1 simple_declaration . '}' $@2 ';'
   48 simple_declaration: simple_declaration . type_specifier IDENTIFIER ';'

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    LONG      shift, and go to state 3
    FLOAT     shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    SIGNED    shift, and go to state 8
    '}'       shift, and go to state 95

    type_specifier  go to state 96


State 79

    8 function_definition: return_type_specifier declarator '(' params ')' . compound_statement

    '{'  shift, and go to state 97

    compound_statement  go to state 98


State 80

   10 params: params ',' . param_decl

    CHAR      shift, and go to state 1
    INT       shift, and go to state 2
    LONG      shift, and go to state 3
    FLOAT     shift, and go to state 4
    DOUBLE    shift, and go to state 5
    VOID      shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    SIGNED    shift, and go to state 8
    STATIC    shift, and go to state 59
    EXTERN    shift, and go to state 11
    REGISTER  shift, and go to state 12
    AUTO      shift, and go to state 13

    param_decl             go to state 99
    scoped_type_specifier  go to state 62
    storage_class          go to state 22
    type_specifier         go to state 63


State 81

   11 param_decl: scoped_type_specifier declarator .

    $default  reduce using rule 11 (param_decl)


State 82

  111 factor: primary_expression .

    $default  reduce using rule 111 (factor)


State 83

   94 unary_rel_expression: NOT factor .

    $default  reduce using rule 94 (unary_rel_expression)


State 84

   90 simple_expression: simple_expression . OR and_expression
  112 factor: '(' simple_expression . ')'

    OR   shift, and go to state 85
    ')'  shift, and go to state 100


State 85

   90 simple_expression: simple_expression OR . and_expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 67
    primary_expression    go to state 82
    and_expression        go to state 101
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 86

   92 and_expression: and_expression AND . unary_rel_expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 67
    primary_expression    go to state 82
    unary_rel_expression  go to state 102
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 87

   98 rel_expression: sum_expression RELOP . $@9 sum_expression

    $default  reduce using rule 97 ($@9)

    $@9  go to state 103


State 88

  102 sumop: '+' .

    $default  reduce using rule 102 (sumop)


State 89

  103 sumop: '-' .

    $default  reduce using rule 103 (sumop)


State 90

  100 sum_expression: sum_expression sumop . $@10 term

    $default  reduce using rule 99 ($@10)

    $@10  go to state 104


State 91

  109 mulop: '*' .

    $default  reduce using rule 109 (mulop)


State 92

  110 mulop: '/' .

    $default  reduce using rule 110 (mulop)


State 93

  107 term: term mulop . $@11 factor

    $default  reduce using rule 106 ($@11)

    $@11  go to state 105


State 94

   47 simple_declaration: type_specifier IDENTIFIER . ';'

    ';'  shift, and go to state 106


State 95

   46 record_declaration: STRUCT IDENTIFIER '{' $@1 simple_declaration '}' . $@2 ';'

    $default  reduce using rule 45 ($@2)

    $@2  go to state 107


State 96

   48 simple_declaration: simple_declaration type_specifier . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 108


State 97

   71 compound_statement: '{' . $@4 '}'
   73                   | '{' . $@5 block_scope_list '}'

    '}'       reduce using rule 70 ($@4)
    $default  reduce using rule 72 ($@5)

    $@4  go to state 109
    $@5  go to state 110


State 98

    8 function_definition: return_type_specifier declarator '(' params ')' compound_statement .

    $default  reduce using rule 8 (function_definition)


State 99

   10 params: params ',' param_decl .

    $default  reduce using rule 10 (params)


State 100

  112 factor: '(' simple_expression ')' .

    $default  reduce using rule 112 (factor)


State 101

   90 simple_expression: simple_expression OR and_expression .
   92 and_expression: and_expression . AND unary_rel_expression

    AND  shift, and go to state 86

    AND       [reduce using rule 90 (simple_expression)]
    $default  reduce using rule 90 (simple_expression)


State 102

   92 and_expression: and_expression AND unary_rel_expression .

    $default  reduce using rule 92 (and_expression)


State 103

   98 rel_expression: sum_expression RELOP $@9 . sum_expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    '('         shift, and go to state 66

    declarator          go to state 67
    primary_expression  go to state 82
    sum_expression      go to state 111
    term                go to state 74
    factor              go to state 75


State 104

  100 sum_expression: sum_expression sumop $@10 . term

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    '('         shift, and go to state 66

    declarator          go to state 67
    primary_expression  go to state 82
    term                go to state 112
    factor              go to state 75


State 105

  107 term: term mulop $@11 . factor

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    '('         shift, and go to state 66

    declarator          go to state 67
    primary_expression  go to state 82
    factor              go to state 113


State 106

   47 simple_declaration: type_specifier IDENTIFIER ';' .

    $default  reduce using rule 47 (simple_declaration)


State 107

   46 record_declaration: STRUCT IDENTIFIER '{' $@1 simple_declaration '}' $@2 . ';'

    ';'  shift, and go to state 114


State 108

   48 simple_declaration: simple_declaration type_specifier IDENTIFIER . ';'

    ';'  shift, and go to state 115


State 109

   71 compound_statement: '{' $@4 . '}'

    '}'  shift, and go to state 116


State 110

   73 compound_statement: '{' $@5 . block_scope_list '}'

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    LONG        shift, and go to state 3
    FLOAT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    VOID        shift, and go to state 6
    UNSIGNED    shift, and go to state 7
    SIGNED      shift, and go to state 8
    IF          shift, and go to state 117
    DO          shift, and go to state 118
    BREAK       shift, and go to state 119
    CONTINUE    shift, and go to state 120
    RETURN      shift, and go to state 121
    NOT         shift, and go to state 65
    STRUCT      shift, and go to state 122
    STATIC      shift, and go to state 59
    EXTERN      shift, and go to state 11
    REGISTER    shift, and go to state 12
    AUTO        shift, and go to state 13
    '('         shift, and go to state 66
    ';'         shift, and go to state 123
    '{'         shift, and go to state 97

    declarator             go to state 124
    declaration            go to state 125
    scoped_type_specifier  go to state 21
    storage_class          go to state 22
    type_specifier         go to state 63
    primary_expression     go to state 82
    statement              go to state 126
    expression_statement   go to state 127
    expression             go to state 128
    compound_statement     go to state 129
    block_scope_list       go to state 130
    block_item             go to state 131
    conditional_statement  go to state 132
    iteration_statement    go to state 133
    break_statement        go to state 134
    continue_statement     go to state 135
    return_statement       go to state 136
    simple_expression      go to state 137
    and_expression         go to state 70
    unary_rel_expression   go to state 71
    rel_expression         go to state 72
    sum_expression         go to state 73
    term                   go to state 74
    factor                 go to state 75


State 111

   98 rel_expression: sum_expression RELOP $@9 sum_expression .
  100 sum_expression: sum_expression . sumop $@10 term

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89

    $default  reduce using rule 98 (rel_expression)

    sumop  go to state 90


State 112

  100 sum_expression: sum_expression sumop $@10 term .
  107 term: term . mulop $@11 factor

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 100 (sum_expression)

    mulop  go to state 93


State 113

  107 term: term mulop $@11 factor .

    $default  reduce using rule 107 (term)


State 114

   46 record_declaration: STRUCT IDENTIFIER '{' $@1 simple_declaration '}' $@2 ';' .

    $default  reduce using rule 46 (record_declaration)


State 115

   48 simple_declaration: simple_declaration type_specifier IDENTIFIER ';' .

    $default  reduce using rule 48 (simple_declaration)


State 116

   71 compound_statement: '{' $@4 '}' .

    $default  reduce using rule 71 (compound_statement)


State 117

   79 conditional_statement: IF . '(' condition ')' $@6 compound_statement
   82                      | IF . '(' condition ')' $@7 compound_statement $@8 ELSE compound_statement

    '('  shift, and go to state 138


State 118

   85 iteration_statement: DO . compound_statement WHILE '(' condition ')' ';'

    '{'  shift, and go to state 97

    compound_statement  go to state 139


State 119

   86 break_statement: BREAK . ';'

    ';'  shift, and go to state 140


State 120

   87 continue_statement: CONTINUE . ';'

    ';'  shift, and go to state 141


State 121

   88 return_statement: RETURN . ';'
   89                 | RETURN . expression ';'

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66
    ';'         shift, and go to state 142

    declarator            go to state 124
    primary_expression    go to state 82
    expression            go to state 143
    simple_expression     go to state 137
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 122

   15 declaration: STRUCT . IDENTIFIER declarator ';'

    IDENTIFIER  shift, and go to state 144


State 123

   61 expression_statement: ';' .

    $default  reduce using rule 61 (expression_statement)


State 124

   49 primary_expression: declarator .
   62 expression: declarator . '=' expression
   63           | declarator . SHORTHANDADD expression
   64           | declarator . SHORTHANDSUB expression
   65           | declarator . SHORTHANDMULT expression
   66           | declarator . SHORTHANDDIV expression
   67           | declarator . INCREMENT
   68           | declarator . DECREMENT

    SHORTHANDADD   shift, and go to state 145
    SHORTHANDSUB   shift, and go to state 146
    SHORTHANDMULT  shift, and go to state 147
    SHORTHANDDIV   shift, and go to state 148
    INCREMENT      shift, and go to state 149
    DECREMENT      shift, and go to state 150
    '='            shift, and go to state 151

    $default  reduce using rule 49 (primary_expression)


State 125

   76 block_item: declaration .

    $default  reduce using rule 76 (block_item)


State 126

   58 statement: statement . ';' statement
   77 block_item: statement .

    ';'  shift, and go to state 152

    ';'       [reduce using rule 77 (block_item)]
    $default  reduce using rule 77 (block_item)


State 127

   51 statement: expression_statement .

    $default  reduce using rule 51 (statement)


State 128

   60 expression_statement: expression . $@3 ';'

    $default  reduce using rule 59 ($@3)

    $@3  go to state 153


State 129

   52 statement: compound_statement .

    $default  reduce using rule 52 (statement)


State 130

   73 compound_statement: '{' $@5 block_scope_list . '}'

    '}'  shift, and go to state 154


State 131

   74 block_scope_list: block_item .
   75                 | block_item . block_scope_list

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    LONG        shift, and go to state 3
    FLOAT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    VOID        shift, and go to state 6
    UNSIGNED    shift, and go to state 7
    SIGNED      shift, and go to state 8
    IF          shift, and go to state 117
    DO          shift, and go to state 118
    BREAK       shift, and go to state 119
    CONTINUE    shift, and go to state 120
    RETURN      shift, and go to state 121
    NOT         shift, and go to state 65
    STRUCT      shift, and go to state 122
    STATIC      shift, and go to state 59
    EXTERN      shift, and go to state 11
    REGISTER    shift, and go to state 12
    AUTO        shift, and go to state 13
    '('         shift, and go to state 66
    ';'         shift, and go to state 123
    '{'         shift, and go to state 97

    $default  reduce using rule 74 (block_scope_list)

    declarator             go to state 124
    declaration            go to state 125
    scoped_type_specifier  go to state 21
    storage_class          go to state 22
    type_specifier         go to state 63
    primary_expression     go to state 82
    statement              go to state 126
    expression_statement   go to state 127
    expression             go to state 128
    compound_statement     go to state 129
    block_scope_list       go to state 155
    block_item             go to state 131
    conditional_statement  go to state 132
    iteration_statement    go to state 133
    break_statement        go to state 134
    continue_statement     go to state 135
    return_statement       go to state 136
    simple_expression      go to state 137
    and_expression         go to state 70
    unary_rel_expression   go to state 71
    rel_expression         go to state 72
    sum_expression         go to state 73
    term                   go to state 74
    factor                 go to state 75


State 132

   53 statement: conditional_statement .

    $default  reduce using rule 53 (statement)


State 133

   54 statement: iteration_statement .

    $default  reduce using rule 54 (statement)


State 134

   55 statement: break_statement .

    $default  reduce using rule 55 (statement)


State 135

   56 statement: continue_statement .

    $default  reduce using rule 56 (statement)


State 136

   57 statement: return_statement .

    $default  reduce using rule 57 (statement)


State 137

   69 expression: simple_expression .
   90 simple_expression: simple_expression . OR and_expression

    OR  shift, and go to state 85

    OR        [reduce using rule 69 (expression)]
    $default  reduce using rule 69 (expression)


State 138

   79 conditional_statement: IF '(' . condition ')' $@6 compound_statement
   82                      | IF '(' . condition ')' $@7 compound_statement $@8 ELSE compound_statement

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 124
    primary_expression    go to state 82
    expression            go to state 156
    condition             go to state 157
    simple_expression     go to state 137
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 139

   85 iteration_statement: DO compound_statement . WHILE '(' condition ')' ';'

    WHILE  shift, and go to state 158


State 140

   86 break_statement: BREAK ';' .

    $default  reduce using rule 86 (break_statement)


State 141

   87 continue_statement: CONTINUE ';' .

    $default  reduce using rule 87 (continue_statement)


State 142

   88 return_statement: RETURN ';' .

    $default  reduce using rule 88 (return_statement)


State 143

   89 return_statement: RETURN expression . ';'

    ';'  shift, and go to state 159


State 144

   15 declaration: STRUCT IDENTIFIER . declarator ';'

    IDENTIFIER  shift, and go to state 36

    declarator  go to state 50


State 145

   63 expression: declarator SHORTHANDADD . expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 124
    primary_expression    go to state 82
    expression            go to state 160
    simple_expression     go to state 137
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 146

   64 expression: declarator SHORTHANDSUB . expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 124
    primary_expression    go to state 82
    expression            go to state 161
    simple_expression     go to state 137
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 147

   65 expression: declarator SHORTHANDMULT . expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 124
    primary_expression    go to state 82
    expression            go to state 162
    simple_expression     go to state 137
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 148

   66 expression: declarator SHORTHANDDIV . expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 124
    primary_expression    go to state 82
    expression            go to state 163
    simple_expression     go to state 137
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 149

   67 expression: declarator INCREMENT .

    $default  reduce using rule 67 (expression)


State 150

   68 expression: declarator DECREMENT .

    $default  reduce using rule 68 (expression)


State 151

   62 expression: declarator '=' . expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 124
    primary_expression    go to state 82
    expression            go to state 164
    simple_expression     go to state 137
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 152

   58 statement: statement ';' . statement

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    IF          shift, and go to state 117
    DO          shift, and go to state 118
    BREAK       shift, and go to state 119
    CONTINUE    shift, and go to state 120
    RETURN      shift, and go to state 121
    NOT         shift, and go to state 65
    '('         shift, and go to state 66
    ';'         shift, and go to state 123
    '{'         shift, and go to state 97

    declarator             go to state 124
    primary_expression     go to state 82
    statement              go to state 165
    expression_statement   go to state 127
    expression             go to state 128
    compound_statement     go to state 129
    conditional_statement  go to state 132
    iteration_statement    go to state 133
    break_statement        go to state 134
    continue_statement     go to state 135
    return_statement       go to state 136
    simple_expression      go to state 137
    and_expression         go to state 70
    unary_rel_expression   go to state 71
    rel_expression         go to state 72
    sum_expression         go to state 73
    term                   go to state 74
    factor                 go to state 75


State 153

   60 expression_statement: expression $@3 . ';'

    ';'  shift, and go to state 166


State 154

   73 compound_statement: '{' $@5 block_scope_list '}' .

    $default  reduce using rule 73 (compound_statement)


State 155

   75 block_scope_list: block_item block_scope_list .

    $default  reduce using rule 75 (block_scope_list)


State 156

   83 condition: expression . logop expression
   84          | expression .

    AND  shift, and go to state 167
    OR   shift, and go to state 168

    $default  reduce using rule 84 (condition)

    logop  go to state 169


State 157

   79 conditional_statement: IF '(' condition . ')' $@6 compound_statement
   82                      | IF '(' condition . ')' $@7 compound_statement $@8 ELSE compound_statement

    ')'  shift, and go to state 170


State 158

   85 iteration_statement: DO compound_statement WHILE . '(' condition ')' ';'

    '('  shift, and go to state 171


State 159

   89 return_statement: RETURN expression ';' .

    $default  reduce using rule 89 (return_statement)


State 160

   63 expression: declarator SHORTHANDADD expression .

    $default  reduce using rule 63 (expression)


State 161

   64 expression: declarator SHORTHANDSUB expression .

    $default  reduce using rule 64 (expression)


State 162

   65 expression: declarator SHORTHANDMULT expression .

    $default  reduce using rule 65 (expression)


State 163

   66 expression: declarator SHORTHANDDIV expression .

    $default  reduce using rule 66 (expression)


State 164

   62 expression: declarator '=' expression .

    $default  reduce using rule 62 (expression)


State 165

   58 statement: statement . ';' statement
   58          | statement ';' statement .

    ';'  shift, and go to state 152

    ';'       [reduce using rule 58 (statement)]
    $default  reduce using rule 58 (statement)


State 166

   60 expression_statement: expression $@3 ';' .

    $default  reduce using rule 60 (expression_statement)


State 167

  105 logop: AND .

    $default  reduce using rule 105 (logop)


State 168

  104 logop: OR .

    $default  reduce using rule 104 (logop)


State 169

   83 condition: expression logop . expression

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 124
    primary_expression    go to state 82
    expression            go to state 172
    simple_expression     go to state 137
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 170

   79 conditional_statement: IF '(' condition ')' . $@6 compound_statement
   82                      | IF '(' condition ')' . $@7 compound_statement $@8 ELSE compound_statement

    '{'       reduce using rule 78 ($@6)
    '{'       [reduce using rule 80 ($@7)]
    $default  reduce using rule 78 ($@6)

    $@6  go to state 173
    $@7  go to state 174


State 171

   85 iteration_statement: DO compound_statement WHILE '(' . condition ')' ';'

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 64
    NOT         shift, and go to state 65
    '('         shift, and go to state 66

    declarator            go to state 124
    primary_expression    go to state 82
    expression            go to state 156
    condition             go to state 175
    simple_expression     go to state 137
    and_expression        go to state 70
    unary_rel_expression  go to state 71
    rel_expression        go to state 72
    sum_expression        go to state 73
    term                  go to state 74
    factor                go to state 75


State 172

   83 condition: expression logop expression .

    $default  reduce using rule 83 (condition)


State 173

   79 conditional_statement: IF '(' condition ')' $@6 . compound_statement

    '{'  shift, and go to state 97

    compound_statement  go to state 176


State 174

   82 conditional_statement: IF '(' condition ')' $@7 . compound_statement $@8 ELSE compound_statement

    '{'  shift, and go to state 97

    compound_statement  go to state 177


State 175

   85 iteration_statement: DO compound_statement WHILE '(' condition . ')' ';'

    ')'  shift, and go to state 178


State 176

   79 conditional_statement: IF '(' condition ')' $@6 compound_statement .

    $default  reduce using rule 79 (conditional_statement)


State 177

   82 conditional_statement: IF '(' condition ')' $@7 compound_statement . $@8 ELSE compound_statement

    $default  reduce using rule 81 ($@8)

    $@8  go to state 179


State 178

   85 iteration_statement: DO compound_statement WHILE '(' condition ')' . ';'

    ';'  shift, and go to state 180


State 179

   82 conditional_statement: IF '(' condition ')' $@7 compound_statement $@8 . ELSE compound_statement

    ELSE  shift, and go to state 181


State 180

   85 iteration_statement: DO compound_statement WHILE '(' condition ')' ';' .

    $default  reduce using rule 85 (iteration_statement)


State 181

   82 conditional_statement: IF '(' condition ')' $@7 compound_statement $@8 ELSE . compound_statement

    '{'  shift, and go to state 97

    compound_statement  go to state 182


State 182

   82 conditional_statement: IF '(' condition ')' $@7 compound_statement $@8 ELSE compound_statement .

    $default  reduce using rule 82 (conditional_statement)
